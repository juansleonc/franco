name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  backend:
    name: Rails API - Lint & Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: franco_test
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4'
          bundler-cache: true
      - name: Install gems
        working-directory: ${{ github.workspace }}/api
        run: bundle install --jobs 4 --retry 3
      - name: RuboCop
        working-directory: ${{ github.workspace }}/api
        run: bin/rubocop -f github
      - name: Wait for Postgres
        shell: bash
        run: |
          for i in {1..60}; do
            (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1 && echo "Postgres is up" && break
            echo "Waiting for Postgres... ($i)"
            sleep 1
          done
      - name: DB prepare
        working-directory: ${{ github.workspace }}/api
        env:
          DB_HOST: 127.0.0.1
          DB_USER: postgres
          DB_PASSWORD: postgres
          RAILS_ENV: test
        run: bundle exec rails db:prepare
      - name: RSpec
        working-directory: ${{ github.workspace }}/api
        env:
          DB_HOST: 127.0.0.1
          DB_USER: postgres
          DB_PASSWORD: postgres
          RAILS_ENV: test
        run: bundle exec rspec --format progress
      - name: Generate OpenAPI (artifact)
        if: ${{ always() }}
        working-directory: ${{ github.workspace }}/api
        env:
          DB_HOST: 127.0.0.1
          DB_USER: postgres
          DB_PASSWORD: postgres
          RAILS_ENV: test
        run: bundle exec rake rswag:specs:swaggerize
      - name: Upload Swagger artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: swagger-v1
          path: api/swagger/v1/swagger.yaml

  security:
    name: Rails API - Security Scans
    runs-on: ubuntu-latest
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/api/Gemfile
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4'
          bundler-cache: true
      - name: Brakeman
        working-directory: ${{ github.workspace }}/api
        run: bundle exec brakeman --no-pager
      - name: Bundler Audit
        working-directory: ${{ github.workspace }}/api
        run: |
          gem install bundler-audit -N
          bundle audit check --update

  mobile:
    name: React Native App - Lint, Typecheck, Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: app/package-lock.json
      - name: Install deps
        working-directory: ${{ github.workspace }}/app
        run: npm ci
      - name: ESLint
        working-directory: ${{ github.workspace }}/app
        run: npm run lint --silent
      - name: TypeScript
        working-directory: ${{ github.workspace }}/app
        run: npm run typecheck --silent
      - name: Jest
        working-directory: ${{ github.workspace }}/app
        run: npm test -- --ci --runInBand
